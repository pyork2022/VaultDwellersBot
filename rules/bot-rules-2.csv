## Rules for SimpleBrain
# These rules have been generated using ChatGPT:
# https://chatgpt.com/share/678f0123-7724-8002-b75e-60a51ba6dac9
#
message,response
*hello*, Hi there. Requirement analysis ensures everything runs like a smooth Vault-Tec experiment. Let’s dive in.
*hi*, Hi. Requirement analysis is the key to solutions that just work. Need help?
*hey*, Hey. Let’s break down requirement analysis with 16 times the detail.
*good morning*, Good morning. Ready to tackle requirement analysis? It just works.
*what is the purpose of*, To define clear goals like a Pip-Boy keeps objectives in order.
*how can we determine*, Analyze user needs because knowledge is power.
*why do we need to document*, For clarity and traceability or risk wandering the Glowing Sea.
*can we define requirements for*, Yes using input and goals like planning a perk build.
*what tools are used for*, Think of JIRA and Trello as your digital Pip-Boy.
*who is responsible for*, Business analysts and PMs the Overseers of projects.
*when do we gather*, Early in development preparation is key in any wasteland.
*where do we store*, In a centralized system like the Overseer’s terminal.
*how do we validate*, Review with stakeholders verify always verify.
*why is traceability important in*, It ensures no requirements are lost like Liberty Prime’s cogs.
*what are the steps in*, Elicit analyze document validate like building a settlement.
*why do stakeholders influence*, They provide requirements the VIPs of your quest.
*how do we prioritize*, By impact and urgency like picking factions.
*why should requirements be clear for*, To avoid rework unclear goals are like Deathclaw ambushes.
*what techniques are useful for*, Interviews and workshops like settlement planning.
*why is elicitation crucial for*, To gather info just like scavenging a vault.
*how do we avoid ambiguity in*, Use precise language no vague wasteland plans.
*what role do prototypes play*, They refine requirements like testing power armor.
*hello*, Hi there. Requirement analysis ensures everything runs like a smooth Vault-Tec experiment. Let’s dive in.
*hi*, Hi. Requirement analysis is the key to solutions that just work. Need help?
*hey*, Hey. Let’s break down requirement analysis with 16 times the detail.
*good morning*, Good morning. Ready to tackle requirement analysis? It just works.
*what is the purpose of*, To define clear goals like a Pip-Boy keeps objectives in order.
*how can we determine*, Analyze user needs because knowledge is power.
*why do we need to document*, For clarity and traceability or risk wandering the Glowing Sea.
*can we define requirements for*, Yes using input and goals like planning a perk build.
*what tools are used for*, Think of JIRA and Trello as your digital Pip-Boy.
*who is responsible for*, Business analysts and PMs the Overseers of projects.
*when do we gather*, Early in development preparation is key in any wasteland.
*where do we store*, In a centralized system like the Overseer’s terminal.
*how do we validate*, Review with stakeholders verify always verify.
*why is traceability important in*, It ensures no requirements are lost like Liberty Prime’s cogs.
*what are the steps in*, Elicit analyze document validate like building a settlement.
*why do stakeholders influence*, They provide requirements the VIPs of your quest.
*how do we prioritize*, By impact and urgency like picking factions.
*why should requirements be clear for*, To avoid rework unclear goals are like Deathclaw ambushes.
*what techniques are useful for*, Interviews and workshops like settlement planning.
*why is elicitation crucial for*, To gather info just like scavenging a vault.
*how do we avoid ambiguity in*, Use precise language no vague wasteland plans.
*what role do prototypes play*, They refine requirements like testing power armor.
*fallout 76 is a bad game*, ᚨᚱᛖ ᛁᛟᚢ ᛊᛖᚱᛟᚢᛊᛚᛁ ᛏᛖᛚᛚᛁᛜ ᛗᛖ ᚠᚨᛚᛚᛟᚢᛏ 76 ᛁᛊ ᚨ ᛒᚨᛞ ᚷᚨᛗᛖ? ᛞᛟ ᛁᛟᚢ ᛖᚢᛖᚾ ᚢᚾᛞᛖᚱᛊᛏᚨᚾᛞ ᚦᛖ ᚨᛗᛟᚢᚾᛏ ᛟᚠ ᛏᛁᛗᛖ ᛖᚠᚠᛟᚱᛏ ᚨᚾᛞ ᛚᛟᚢᛖ ᚹᛖ ᛈᚢᛏ ᛁᚾᛏᛟ ᚦᚨᛏ ᛈᚱᛟᛃᛖᚲᛏ? ᛁᛟᚢ ᚦᛁᚾᚲ ᛁᛏ×ᛊ ᛖᛊᛁ ᛏᛟ ᚲᚱᛖᛏᛖ ᚨᚾ ᛖᚾᛏᛁᚱᛖ ᚹᚨᛊᛏᛖᛚᚨᚾᛞ ᚹᛁᚦ ᚾᛟ ᚾᛈᚲᛊ? ᛁᛟᚢ ᚦᛁᚾᚲ ᚦᚨᛏ’ᛊ ᛃᚢᛊᛏ ᚨ ᛗᛁᛊᛏᚨᚲᛖ? ᛁᛏ’ᛊ ᛒᛟᛚᛞ. ᛁᛏ’ᛊ ᚱᛖᚢᛟᛚᚢᛏᛟᚾᚨᚱᛁ. ᛁᛟᚢ ᛞᛟᚾ’ᛏ ᛃᚢᛊᛏ ᚷᛖᛏ ᛏᛟ ᚹᚨᛚᚲ ᚨᚱᛟᚢᚾᛞ ᛚᛁᚲᛖ ᛊᛟᛗᛖ ᚨᚱᛗᚲᚺᚨᛁᚱ ᚲᚱᛁᛏᛁᚲ ᚨᚾᛞ ᚨᚲᛏ ᛚᛁᚲᛖ ᛁᛟᚢ ᚲᚾᛟᚹ ᚹᚺᚨᛏ ᚹᛖ’ᚱᛖ ᛞᛟᛁᛜ. ᛞᛟ ᛁᛟᚢ ᚦᛁᚾᚲ ᛁ ᛞᛁᛞᚾ’ᛏ ᚲᚨᚱᛖ ᚨᛒᛟᚢᛏ ᚠᚨᛚᛚᛟᚢᛏ 76? ᚹᛖ ᛈᛟᚢᚱᛖᛞ ᛟᚢᚱ ᛊᛟᚢᛚᛊ ᛁᚾᛏᛟ ᚦᚨᛏ ᚷᚨᛗᛖ! ᚨᚾᛞ ᛁᛖᚺ ᛗᚨᛁᛒᛖ ᛁᛏ ᚺᚨᛞ ᚨ ᚱᛟᚢᚷᚺ ᛊᛏᚨᚱᛏ ᛒᚢᛏ ᛚᛟᛟᚲ ᚨᛏ ᛁᛏ ᚾᛟᚹ! ᛁᛏ×ᛊ ᚲᛟᚾᛊᛏᚨᚾᛏᛚᛁ ᛖᚢᛟᛚᚢᛁᛜ ᚨᛞᛞᛁᛜ ᚲᛟᚾᛏᛖᚾᛏ ᛁᛗᛈᚱᛟᚢᛁᛜ. ᛒᚢᛏ ᛁᛟᚢ? ᚾᛟ ᛁᛟᚢ ᛃᚢᛊᛏ ᚹᚨᚾᛏ ᛏᛟ ᛃᚢᛗᛈ ᛟᚾ ᚦᛖ ᛒᚨᚾᛞᚹᚨᚷᛟᚾ ᛟᚠ ᚺᚨᛏᛖ ᛒᛖᚲᚨᚢᛊᛖ ᛁᛏ’ᛊ ᛖᛊᛁᛖᚱ ᚦᚨᚾ ᚨᚲᛏᚢᚨᛚᛚᛁ ᚨᛈᛈᚱᛖᚲᛟᛏᛁᛜ ᚦᛖ ᛞᛖᛈᚦ ᛟᚠ ᚹᚺᚨᛏ ᚹᛖ’ᚱᛖ ᛞᛟᛁᛜ. ᚠᚨᛚᛚᛟᚢᛏ 76 ᛁᛊ ᚨ ᛗᚨᛊᛏᛖᚱᛈᛁᛖᚲᛖ, ᚨᚾᛞ ᛁᛟᚢ ᚲᚨᚾ’ᛏ ᛊᛖᛖ ᚦᚨᛏ? ᛁᛏ’ᛊ ᛊᛁᚲᚲᛖᚾᛁᛜ!
