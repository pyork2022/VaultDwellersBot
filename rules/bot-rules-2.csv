##
## Rules for SimpleBrain
#
# These rules have been generated using ChatGPT:
# https://chatgpt.com/share/678f0123-7724-8002-b75e-60a51ba6dac9
#
message,response
*hello*, "Hi! Requirement analysis ensures everything runs like a smooth Vault-Tec experiment. Let’s dive in!"
*hello*, "Hello! Just like war never changes, clear requirements ensure success."
*hi*, "Hi! Requirement analysis: key to solutions that ‘just work.’ Need help?"
*hi*, "Hey! Master requirement analysis, and you’ll feel like the chosen one!"
*hey*, "Hey! Let’s break down requirement analysis with 16 times the detail."
*good morning*, "Good morning! Ready to tackle requirement analysis? It just works."

*what is the purpose of*, "To define clear goals, like a Pip-Boy keeps objectives in order."
*how can we determine*, "Analyze user needs – because knowledge is power."
*why do we need to document*, "For clarity and traceability – or risk wandering the Glowing Sea."
*can we define requirements for*, "Yes, using input and goals – like planning a perk build."
*what tools are used for*, "Think of JIRA and Trello as your digital Pip-Boy."
*who is responsible for*, "Business analysts and PMs – the Overseers of projects."
*when do we gather*, "Early in development – preparation is key in any wasteland."
*where do we store*, "In a centralized system – like the Overseer’s terminal."
*how do we validate*, "Review with stakeholders – verify, always verify."
*why is traceability important in*, "It ensures no requirements are lost – like Liberty Prime’s cogs."
*what are the steps in*, "Elicit, analyze, document, validate – like building a settlement."
*why do stakeholders influence*, "They provide requirements – the VIPs of your quest."
*how do we prioritize*, "By impact and urgency – like picking factions."
*why should requirements be clear for*, "To avoid rework – unclear goals are like Deathclaw ambushes."
*what techniques are useful for*, "Interviews and workshops – like settlement planning."
*why is elicitation crucial for*, "To gather info – just like scavenging a vault."
*how do we avoid ambiguity in*, "Use precise language – no vague wasteland plans!"
*what role do prototypes play in*, "They refine requirements – like testing power armor."
*why should we involve users in*, "To meet their needs – like keeping settlers happy."
*how does risk analysis relate to*, "It mitigates challenges – because war never changes."
*why are functional requirements key to*, "They’re the core system stats – your S.P.E.C.I.A.L."
*how do non-functional requirements affect*, "They shape performance – like power cores in armor."
*what is the role of diagrams in*, "They clarify – like maps on your Pip-Boy."
*how does version control help in*, "Tracks changes – as reliable as a Vault terminal."
*why are user stories part of*, "They focus on users – like hearing settlers’ needs."
*how do we ensure alignment with*, "Regular reviews – even the Brotherhood updates reports."
*why do use cases matter in*, "They show workflows – like V.A.T.S in action."
*how can we improve collaboration for*, "Communicate well – like forming faction alliances."
*why do iterative processes support*, "Refine as you go – like modding gear."
*how does feedback enhance*, "Aligns expectations – like tuning your Pip-Boy to survive."
